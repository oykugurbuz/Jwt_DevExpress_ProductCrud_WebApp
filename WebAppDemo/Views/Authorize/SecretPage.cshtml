@using Newtonsoft.Json
@model ICollection<WebAppDemo.Models.ProductViewModel>
@{
	Layout = "~/Views/Shared/_LayoutAuth.cshtml";
	ViewBag.Title = "Products";
}
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	<title></title>
</head>
<body>
	<div id="secretPageContent">
		<div id="addBtn"></div>
		@* //kategori *@
		<div id="addCategory"></div>
		<div id="categoryPopup"></div>
		<div id="productList"></div>
		<div id="productPopup"></div>
		<div id="editProductPopup"></div>
		
	</div>
</body>
</html>


@section Scripts {
	<script>

			   $(function () {
			   //CREATE
					   let categoriesGlobal = [];

		$("body").append(`<div id="productPopup"></div>`);

		// dxPopup
		$("#productPopup").dxPopup({
			title: "Ürün Ekle",
			width: 800,
			height: "auto",
			visible: false,
			showCloseButton: true,
			contentTemplate: function () {
				const $content = $("<div>");
				const $formContainer = $("<div id='form-container'></div>");
				const $submitBtn = $("<div id='submitBtn' style='margin-top:10px'></div>");
				$content.append($formContainer, $submitBtn);

				// dxForm 
				const formInstance = $formContainer.dxForm({
					formData: {
						productName: "",
						price: 0,
						description: "",
						isActive: false,
						categoryId: null
					},
					colCount: 1,
					labelLocation: "top",
					items: [
						{
							dataField: "productName",
							label: { text: "Ürün Adı" },
							editorType: "dxTextBox",
							isRequired: true
						},
						{
							dataField: "price",
							label: { text: "Fiyat" },
							editorType: "dxNumberBox",
							editorOptions: {
								min: 1,
								max: 1000000,
								format: "#,##0.00"
							}
						},
						{
							dataField: "categoryId",
							label: { text: "Kategori" },
							editorType: "dxSelectBox",
							isRequired: true,
							editorOptions: {
								dataSource: categoriesGlobal,
								displayExpr: "categoryName",
								valueExpr: "categoryId"
							}
						},
						{
							dataField: "description",
							label: { text: "Açıklama" },
							editorType: "dxTextArea"
						},
						{
							dataField: "isActive",
							label: { text: "Aktif mi?" },
							editorType: "dxCheckBox"
						}
					]
				}).dxForm("instance");

				
				$submitBtn.dxButton({
					text: "Kaydet",
					type: "success",
					icon: "save",
					onClick: function () {
						const formData = formInstance.option("formData");

						// validasyon
						if (!formData.productName || !formData.categoryId || formData.price <= 0) {
							DevExpress.ui.notify("Lütfen tüm zorunlu alanları doldurun!", "warning", 2000);
							return;
						}

						$.ajax({
							url: "/Authorize/CreateProduct",
							type: "POST",
							contentType: "application/json",
							data: JSON.stringify(formData),
							success: function () {
									DevExpress.ui.notify("Ürün başarıyla eklendi!", "success", 2000);
		                           $("#productPopup").dxPopup("hide");

		                           const grid = $("#productList").dxDataGrid("instance");
		                           const dataSource = grid.getDataSource();
		                           const store = dataSource.store();

		                         
		                          store.insert(formData).then(() => {
			                      dataSource.reload(); 
		                    });
							},
							error: function (xhr) {
								console.log("Hata:", xhr.responseText);
								DevExpress.ui.notify("Hata oluştu!", "error", 2000);
							}
						});
					}
				});

				return $content;
			},
			onHidden: function () {
				 const formInstance = $("#form-container").dxForm("instance");
		         if (formInstance) {
			formInstance.resetValues();
			}
			}
		});

		// Ürün Ekle butonu
		$("#addBtn").dxButton({
			text: "Ürün Ekle",
			icon: "add",
			type: "success",
			onClick: function () {
				$.get("/Authorize/GetCategories", function (categories) {
					if (categories && categories.length > 0) {
						categoriesGlobal = categories;
						$("#productPopup").dxPopup("show");
					} else {
						DevExpress.ui.notify("Kategori bilgileri alınamadı!", "error", 2000);
					}
				});
			}
		});

		
					   //-----LİST----
				   // Ürünleri listeleyen grid
				   $("#productList").dxDataGrid({
					   dataSource: @Html.Raw(Json.Serialize(Model)),
					   keyExpr: "productId",
					   showBorders: true,
					   columnAutoWidth: true,
					   rowAlternationEnabled: true,
					   columns: [
						   { dataField: "productId", caption: "Id" },
						   { dataField: "productName", caption: "Ürün Adı" },
						   { dataField: "price", caption: "Fiyat", format: { type: "currency", precision: 2 } },
						   {
						   dataField: "categoryId",
						   caption: "Kategori",
						   lookup: {
							   dataSource: @Html.Raw(Json.Serialize(ViewBag.Categories)),
							   valueExpr: "categoryId",
							   displayExpr: "categoryName"
							}
						  },
						   { dataField: "description", caption: "Açıklama" },
						   {
							   type: "buttons",
							   buttons: [
								   {
									   hint: "Düzenle",
									   icon: "edit",
									   onClick: function (e) {
										   showEditPopup(e.row.data);
										   console.log("Ürün satırı(tüm satır)",e.row.data);
									   }
								   },
								   {
									   hint: "Sil",
									   icon: "trash",
									   onClick: function (e) {
										   if (confirm("Bu ürünü silmek istiyor musunuz?")) {
											   $.post('/Authorize/DeleteProduct', { id: e.row.data.productId })
												   .done(function () {
													   DevExpress.ui.notify("Ürün silindi", "success", 1500);
													   var dataSource = e.component.getDataSource();//ui da anında silinmesi için
													   dataSource.store().remove(e.row.data.productId); // Veri kaynağından sil
													   e.component.refresh(); // DataGrid'i yenile
														   })
												   .fail(function () {
													   DevExpress.ui.notify("Silme işlemi başarısız", "error", 2000);
												   });
										   }
									   }
								   }
							   ]
						   }
					   ]
				   });
			   });

// //Kategori ekle 
// // buttonu
		$(function () {
			let categoriesGlobal = [];

			$("#addCategory").dxButton({
				text: "Kategori Ekle",
				icon: "add",
				type: "default",
				onClick: function () {
					$("#categoryPopup").dxPopup("instance").show();
				}
			});

			$("body").append('<div id="categoryPopup"></div>');

			$("#categoryPopup").dxPopup({
				title: "Kategori Ekle",
				width: 400,
				height: "auto",
				visible: false,
				showCloseButton: true,
				contentTemplate: function () {
					const $contentCategory = $("<div>");
					const $formContainerCategory = $("<div id='contentCategoryForm'></div>");
					const $buttonAddCategory = $("<div id='buttonAddCategory' style='margin-top:10px'></div>");

					$contentCategory.append($formContainerCategory, $buttonAddCategory);

					const formInstanceCategory = $formContainerCategory.dxForm({
						formData: {
							categoryId: null,
							categoryName: ""
						},
						items: [
							{
								dataField: "categoryName",
								label: { text: "Kategori" },
								editorType: "dxTextBox",
								isRequired: true
							}
						]
					}).dxForm("instance");

					$buttonAddCategory.dxButton({
						text: "Kaydet",
						type: "success",
						icon: "save",
						onClick: function () {
							const formData = formInstanceCategory.option("formData");

							if (!formData.categoryName) {
								DevExpress.ui.notify("Lütfen kategori adını giriniz!", "warning", 2000);
								return;
							}

							$.ajax({
								url: "/Authorize/CreateCategory", // ← Controller'daki Action yolu
								type: "POST",
								contentType: "application/json",
								data: JSON.stringify(formData),
								success: function () {
									DevExpress.ui.notify("Kategori başarıyla kaydedildi!", "success", 2000);
									$("#categoryPopup").dxPopup("instance").hide();
									window.location.href='/Authorize/CategoryPage';
								},
								error: function (xhr) {
									console.log("Hata:", xhr.responseText);
									DevExpress.ui.notify("Hata oluştu", "error", 2000);
								}
							});
						}
					});

					return $contentCategory;
				},
				onHidden: function () {
					const formInstanceCategory = $("#contentCategoryForm").dxForm("instance");
					if (formInstanceCategory) {
						formInstanceCategory.resetValues();
					}
				}
			});
		});




			   //EDİT
					   let editPopup = null;

			   function showEditPopup(productData) {
				   const popupContent = $("<div>").attr("id", "editForm");

				   if (!editPopup) {
					   editPopup = $("#editProductPopup").dxPopup({
						   title: "Ürünü düzenle",
						   width: 800,
						   height: "auto",
						   showCloseButton: true,
						   contentTemplate: function () {
							   return popupContent;
						   },
						   onShown: function () {
							   $.getJSON("/Authorize/GetCategories", function (categories) {
								   popupContent.dxForm({
									   formData: productData,
									   items: [
										   {
											   dataField: "productName",
											   label: { text: "Ürün Adı" },
										   },
										   {
											   dataField: "price",
											   label: { text: "Fiyat" },
											   editorType: "dxNumberBox",
											   editorOptions: {
												   min: 1,
												   max: 1000000,
												   format: "#,##0.00"
											   }
										   },
										   {
											   dataField: "categoryId",
											   label: { text: "Kategori" },
											   editorType: "dxSelectBox",
											   editorOptions: {
												   dataSource: categories,
												   displayExpr: "categoryName",
												   valueExpr: "categoryId",
												   placeholder: "Seçiniz",
												   searchEnabled: true,

											   }
										   },
										   {
											   dataField: "description",
											   label: { text: "Açıklama" },
										   },
										   {
											   itemType: "button",
											   buttonOptions: {
												   text: "Kaydet",
												   type: "success",
												   onClick: function () {
													   const formInstance = popupContent.dxForm("instance");
													   const formData = formInstance.option("formData");

													   $.ajax({
														   url: '/Authorize/EditProduct',
														   type: 'POST',
														   contentType: 'application/json',
														   data: JSON.stringify(formData),
														   success: function () {
															   DevExpress.ui.notify("Ürün başarıyla güncellendi", "success", 2000);
															   editPopup.hide();
															   $("#productList").dxDataGrid("instance").refresh();
														   },
														   error: function () {
															   DevExpress.ui.notify("Güncelleme işlemi başarısız", "error", 2000);
														   }
													   });
												   }
											   }
										   }
									   ]
								   });
							   });
						   },
						   onHidden: function () {
							   editPopup = null;
						   }
					   }).dxPopup("instance");
				   }

				   editPopup.show();
			   }


	</script>
}

